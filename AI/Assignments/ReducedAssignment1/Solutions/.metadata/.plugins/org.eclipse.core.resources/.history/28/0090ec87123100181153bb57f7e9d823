import java.util.*;

public class AdjacencyListMap 
{
	Map<String,LinkedList<Edge>> adjacencyList;

	public AdjacencyListMap() 
	{
		this.adjacencyList = new HashMap<>();
	}
	
	public void addDirectedEdge(String vertex, String destination, int weight) 
	{
		if(!this.adjacencyList.containsKey(vertex)) 
		{
			this.adjacencyList.put(vertex, new LinkedList<Edge>());
		}
		
		if(!this.adjacencyList.containsKey(destination)) 
		{
			this.adjacencyList.put(destination, new LinkedList<Edge>());
		}
		
		this.adjacencyList.get(vertex).add(new Edge(destination,weight));
	}
	
	public void addUndirectedEdge(String vertex, String destination, int weight) 
	{
		this.addDirectedEdge(vertex, destination, weight);
		this.addDirectedEdge(destination, vertex, weight);
	}

	@Override
	public String toString() {
		String value = "";
		for(Map.Entry<String, LinkedList<Edge>> entry: this.adjacencyList.entrySet()) 
		{
			value+=entry.getKey();
			value+=" - ";
			for(Edge edge: entry.getValue()) 
			{
				value+=edge.toString()+",";						
			}
			value.substring(0,(value.length()-1));
			value+="\n";
		}
		return value;
	}
}