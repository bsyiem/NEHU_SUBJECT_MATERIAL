package problemSolver;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import entity.AdjacencyList;

public class ProblemReader 
{
	FileReader fReader;
	BufferedReader bReader;
	
	AdjacencyList<String> cityMap;
	String startCity;
	
	public String getStartCity() {
		return startCity;
	}

	public void setStartCity(String startCity) {
		this.startCity = startCity;
	}

	public AdjacencyList<String> getCityMap() {
		return cityMap;
	}

	public void setCityMap(AdjacencyList<String> cityMap) {
		this.cityMap = cityMap;
	}
 

	public ProblemReader(String filename) throws FileNotFoundException 
	{
		this.fReader = new FileReader(filename);
	    this.bReader= new BufferedReader(fReader);
	    try {
		    this.startCity = bReader.readLine();
		} catch (Exception e) 
	    {
			System.out.println("Start city could not be determined. error = " +e);
			System.exit(1);
		}
	}
	
	public AdjacencyList<String> getAdjacencyList() 
	{
		try 
		{
			String line;
			while((line = bReader.readLine()) != null) 
			{
				String[] line1 = line.split("-");
				String vertex = line1[0];
				
				String[] line2 = line1[1].split(",");
				
				for(String edgeWeight : line2)
				{
					String[] edge_weight = edgeWeight.split(" ");
					String edge = edge_weight[0];
					int weight = Integer.parseInt(edge_weight[1]);
					
					this.cityMap.addUndirectedEdgeToVertex(vertex, edge, weight);
				}
			}
			
			return this.cityMap;
			
		}catch (Exception e) {
			e.printStackTrace();
			return null;
		}
		 
	}
}
